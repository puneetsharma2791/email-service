{"version":3,"sources":["screens/shared/copyright.tsx","store/models/user.ts","store/slices/userSlice.ts","screens/login/root.tsx","screens/signup/root.tsx","screens/dashboard/molecules/viewMail.tsx","screens/dashboard/molecules/compose.tsx","screens/dashboard/root.tsx","store/store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","Mail","from","to","cc","date","subject","message","id","this","Math","random","User","firstName","lastName","userId","password","sent","inbox","userSlice","createSlice","name","initialState","users","loggedInUserId","reducers","addUser","state","action","push","payload","user","addSentEmail","map","mail","addInboxEmail","setLoggedInUserId","removeLoggedInUserId","undefined","selectUsers","selectLoggedInUser","find","singleUser","actions","getStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","Login","classes","useState","setUser","error","setError","history","useHistory","useSelector","dispatch","useDispatch","handleChange","field","value","preValue","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","noValidate","TextField","required","onChange","event","target","fullWidth","label","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Collapse","in","Alert","severity","IconButton","aria-label","size","onClick","fontSize","Button","matchingUser","singleuser","Box","mt","useStyles","SignUp","Container","maxWidth","justify","ViewMail","props","Dialog","open","onClose","handleClose","aria-labelledby","DialogTitle","DialogContent","dividers","gutterBottom","DialogActions","ComposeMail","setMail","FormControl","placeholder","join","split","entry","trim","multiline","rows","defaultValue","e","newMailObject","forEach","toAddress","drawerWidth","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","padding","textAlign","text","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","input","flex","iconButton","drawerClose","overflowX","breakpoints","up","composeMail","textTransform","fontWeight","toolbar","justifyContent","mixins","content","flexGrow","background","DashBoard","React","openViewMail","setOpenViewMail","openComposeMail","setOpenComposeMail","mailMenu","setMailMenu","loggedInUser","useEffect","selectedMail","setSelectedMail","handleClickOpenViewMail","selected","setSelected","handleClick","_event","selectedIndex","indexOf","newSelected","concat","slice","length","isSelected","createMuiTheme","primary","contrastText","setOpen","handleDrawerClose","ThemeProvider","Drawer","clsx","noWrap","direction","Divider","List","index","ListItem","button","ListItemIcon","ListItemText","style","AppBar","position","Toolbar","dense","ListItemSecondaryAction","Chip","InputBase","inputProps","startIcon","TableContainer","Table","TableBody","row","isItemSelected","TableRow","hover","role","aria-checked","tabIndex","TableCell","checked","scope","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","configureStore","reducer","preloadedState","subscribe","stringify","setItem","saveState","getState","App","StrictMode","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.9d0757f4.chunk.js","sourcesContent":["import Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nexport const Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://sahaj.ai/\">\n        Sahaj\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n","export class Mail{\n    public id:string;\n    constructor(\n        \n    public from?:string,\n    public to?:string[],\n    public cc?:string[],\n    public date?:Date,\n    public subject?:string,\n    public message?:string){\n        this.id = Math.random()+\"\"\n    }\n}\nexport class User{\n    constructor(\n    public firstName?:string,\n    public lastName?:string,\n    public userId?:string,\n    public password?:string,\n    public sent?:Mail[],\n    public inbox?:Mail[]){}\n}","import { createSlice } from '@reduxjs/toolkit'\nimport {User} from \"../models/user\"\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState: {\n      users: [{}],\n      loggedInUserId:\"\"\n    },\n    reducers: {\n      addUser: (state,action) => {\n        state.users.push(action.payload.user);\n      },\n      addSentEmail: (state:any,action) => {\n      \n        state.users = state.users.map((user:User)=>{\n            if(user.userId === action.payload.userId){\n                if(user.sent){\n                  user.sent.push(action.payload.mail)\n                }\n                else{\n                  user.sent=[action.payload.mail];\n                }\n            }\n            return user;\n        })\n      },\n      addInboxEmail: (state:any,action) => {\n        state.users = state.users.map((user:User)=>{\n            if(user.userId === action.payload.userId){\n              if(user.inbox){\n                user.inbox.push(action.payload.mail)\n              }\n              else{\n                user.inbox=[action.payload.mail];\n              }\n            }\n            return user;\n        })\n      },\n      setLoggedInUserId:(state:any,action)=>{\n        state.loggedInUserId = action.payload.loggedInUserId\n      },\n      removeLoggedInUserId:(state:any,action)=>{\n        state.loggedInUserId =undefined\n      }\n    }\n  })\n  export const selectUsers = (state:any) => state.users\n  export const selectLoggedInUser = (state:any) => state.users.find((singleUser:User)=>singleUser.userId === state.loggedInUserId)\n  export const { addUser, addSentEmail ,setLoggedInUserId, addInboxEmail,removeLoggedInUserId} = userSlice.actions","import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { Grid, IconButton, Collapse } from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Copyright } from \"../shared/copyright\";\nimport { User } from \"../../store/models/user\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUsers, setLoggedInUserId } from \"../../store/slices/userSlice\";\nconst getStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(/assets/images/login.jpg)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport const Login: React.FC = () => {\n  const classes = getStyles();\n  let [user, setUser] = useState<User>();\n  let [error, setError] = useState<boolean>(false);\n  const history = useHistory();\n  const users = useSelector(selectUsers);\n  const dispatch = useDispatch();\n  const handleChange = (field: string, value: string) => {\n    setUser((preValue: User | undefined) => {\n      if (!preValue) {\n        preValue = new User();\n      }\n      return { ...preValue, ...{ [field]: value } };\n    });\n  };\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              value={user?.userId}\n              onChange={(event) => {\n                handleChange(\"userId\", event.target.value);\n              }}\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              value={user?.password}\n              onChange={(event) => {\n                handleChange(\"password\", event.target.value);\n              }}\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Collapse in={error}>\n              <Alert\n                severity=\"error\"\n                action={\n                  <IconButton\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    size=\"small\"\n                    onClick={() => {\n                      setError(false);\n                    }}\n                  >\n                    <CloseIcon fontSize=\"inherit\" />\n                  </IconButton>\n                }\n              >\n                Username and Password does not match!!!!\n              </Alert>\n            </Collapse>\n            <Button\n              type=\"button\"\n              fullWidth\n              variant=\"contained\"\n              size=\"large\"\n              onClick={() => {\n                const matchingUser = users.find(\n                  (singleuser: User) =>\n                    singleuser.userId === user?.userId &&\n                    singleuser.password === user?.password\n                );\n\n                if (matchingUser) {\n                  dispatch(\n                    setLoggedInUserId({ loggedInUserId: matchingUser.userId })\n                  );\n                  history.push(\"/dashboard\");\n                } else {\n                  setError(true);\n                }\n              }}\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"/sign-up\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { Copyright } from \"../shared/copyright\";\nimport { User } from \"../../store/models/user\";\nimport { useDispatch } from \"react-redux\";\nimport { addUser } from \"../../store/slices/userSlice\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  let [user, setUser] = useState<User>();\n  const history = useHistory();\n  const handleChange = (field: string, value: string) => {\n    setUser((preValue: User | undefined) => {\n      if (!preValue) {\n        preValue = new User();\n      }\n      return { ...preValue, ...{ [field]: value } };\n    });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                value={user?.firstName}\n                onChange={(event) => {\n                  handleChange(\"firstName\", event.target.value);\n                }}\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                value={user?.lastName}\n                onChange={(event) => {\n                  handleChange(\"lastName\", event.target.value);\n                }}\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                value={user?.userId}\n                onChange={(event) => {\n                  handleChange(\"userId\", event.target.value);\n                }}\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                value={user?.password}\n                onChange={(event) => {\n                  handleChange(\"password\", event.target.value);\n                }}\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              dispatch(addUser({ user: user }));\n              setUser(new User());\n              history.push(\"/login\");\n            }}\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { Typography } from \"@material-ui/core/\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function ViewMail(props: any) {\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={props.handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Email</DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            <b>From:</b> {props.mail.from}\n          </Typography>\n          <Typography gutterBottom>\n            <b>To:</b> {props.mail.to}\n          </Typography>{\" \"}\n          <Typography gutterBottom>\n            <b>Message:</b> {props.mail.message}\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { Typography, TextField, Grid, FormControl } from \"@material-ui/core/\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Mail } from \"../../../store/models/user\";\nimport { useDispatch } from \"react-redux\";\nimport { addInboxEmail, addSentEmail } from \"../../../store/slices/userSlice\";\n\nexport default function ComposeMail(props: any) {\n  const [mail, setMail] = useState<Mail>();\n  let dispatch = useDispatch();\n  const handleChange = (field: string, value: any) => {\n    setMail((preValue: Mail | undefined) => {\n      if (!preValue) {\n        preValue = new Mail();\n      }\n      return { ...preValue, ...{ [field]: value } };\n    });\n  };\n  return (\n    <div>\n      <Dialog\n        fullWidth={true}\n        maxWidth=\"lg\"\n        open={props.open}\n        onClose={props.handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Email</DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            <b>From:</b> {props.mail.from}\n          </Typography>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FormControl fullWidth>\n                {\" \"}\n                <TextField\n                  id=\"standard-textarea\"\n                  label=\"To\"\n                  placeholder=\"xyz.ewr@ccsw.in\"\n                  value={mail?.to?.join(\", \")}\n                  onChange={(event) => {\n                    handleChange(\n                      \"to\",\n                      event.target.value.split(\",\").map((entry) => entry.trim())\n                    );\n                  }}\n                  multiline\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth>\n                <TextField\n                  id=\"standard-textarea\"\n                  label=\"CC\"\n                  value={mail?.cc?.join(\", \")}\n                  onChange={(event) => {\n                    handleChange(\n                      \"cc\",\n                      event.target.value.split(\",\").map((entry) => entry.trim())\n                    );\n                  }}\n                  placeholder=\"xyz.ewr@ccsw.in\"\n                  multiline\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth>\n                <TextField\n                  id=\"standard-textarea\"\n                  label=\"subject\"\n                  value={mail?.subject}\n                  onChange={(event) => {\n                    handleChange(\"subject\", event.target.value);\n                  }}\n                  placeholder=\"congratulation\"\n                  multiline\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth>\n                <TextField\n                  id=\"outlined-multiline-static\"\n                  label=\"Message\"\n                  multiline\n                  value={mail?.message}\n                  onChange={(event) => {\n                    handleChange(\"message\", event.target.value);\n                  }}\n                  rows={40}\n                  defaultValue=\"Default Value\"\n                  variant=\"outlined\"\n                />\n              </FormControl>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={(e) => {\n              const newMailObject = {\n                ...mail,\n                ...{ from: props.mail.from, date: new Date() },\n              };\n              dispatch(\n                addSentEmail({ userId: props.mail.from, mail: newMailObject })\n              );\n              mail?.to?.forEach((toAddress: string) => {\n                dispatch(\n                  addInboxEmail({ userId: toAddress, mail: newMailObject })\n                );\n              });\n              mail?.cc?.forEach((toAddress: string) => {\n                dispatch(\n                  addInboxEmail({ userId: toAddress, mail: newMailObject })\n                );\n              });\n              props.handleClose(e);\n            }}\n            color=\"primary\"\n          >\n            Send\n          </Button>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Discard\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport {\n  AppBar,\n  Grid,\n  Paper,\n  ThemeProvider,\n  ListItemSecondaryAction,\n  Chip,\n  InputBase,\n  TableBody,\n  TableContainer,\n  Table,\n  TableRow,\n  TableCell,\n  Checkbox,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport GradeIcon from \"@material-ui/icons/Grade\";\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\nimport LabelIcon from \"@material-ui/icons/LocalOfferOutlined\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport PriorityHighIcon from \"@material-ui/icons/PriorityHigh\";\nimport AccountCircleRounded from \"@material-ui/icons/AccountCircleRounded\";\nimport ViewMail from \"./molecules/viewMail\";\nimport ComposeMail from \"./molecules/compose\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  removeLoggedInUserId,\n  selectLoggedInUser,\n} from \"../../store/slices/userSlice\";\nimport { Mail, User } from \"../../store/models/user\";\nimport { useHistory } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    backgroundColor: \"white\",\n    color: \"black\",\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  menuButton: {\n    marginRight: 36,\n    backgroundColor: \"#1db494\",\n    color: \"white\",\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n    backgroundColor: \"#2f3f51\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  composeMail: {\n    width: \"100%\",\n    margin: \"2%\",\n    padding: \"6px\",\n  },\n  label: {\n    textTransform: \"capitalize\",\n    fontSize: \"18px\",\n    fontWeight: \"bold\",\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    background: \"#f3f3f4\",\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function DashBoard() {\n  const [openViewMail, setOpenViewMail] = React.useState(false);\n  const [openComposeMail, setOpenComposeMail] = React.useState(false);\n  const [mailMenu, setMailMenu] = React.useState(\"inbox\");\n  const loggedInUser: User = useSelector(selectLoggedInUser);\n  let dispatch = useDispatch();\n  let history = useHistory();\n  useEffect(() => {\n    debugger;\n    if (!loggedInUser.userId) {\n      history.push(\"/login\");\n    }\n  }, [loggedInUser]);\n\n  const handleCloseComposeMail = () => {\n    setOpenComposeMail(false);\n  };\n  const handleClickOpenComposeMail = () => {\n    setOpenComposeMail(true);\n  };\n  const [selectedMail, setSelectedMail] = React.useState({});\n  const handleClickOpenViewMail = () => {\n    setOpenViewMail(true);\n  };\n\n  const handleCloseViewMail = () => {\n    setOpenViewMail(false);\n  };\n\n  const [selected, setSelected] = React.useState<string[]>([]);\n  const handleClick = (_event: any, id: string) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected: string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"#1db494\",\n        contrastText: \"#fff\",\n      },\n      secondary: {\n        main: \"#ff6d00\",\n      },\n    },\n  });\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ViewMail\n        open={openViewMail}\n        mail={selectedMail}\n        handleClose={handleCloseViewMail}\n      ></ViewMail>\n      <ComposeMail\n        open={openComposeMail}\n        handleClose={handleCloseComposeMail}\n        mail={{ from: loggedInUser?.userId }}\n      ></ComposeMail>\n      <div className={classes.root}>\n        <CssBaseline />\n\n        <Drawer\n          variant=\"permanent\"\n          className={clsx(classes.drawer, {\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          })}\n          classes={{\n            paper: clsx({\n              [classes.drawerOpen]: open,\n              [classes.drawerClose]: !open,\n            }),\n          }}\n        >\n          <div className={classes.toolbar}>\n            <Typography\n              variant=\"h6\"\n              noWrap\n              className={clsx({\n                [classes.hide]: !open,\n              })}\n            >\n              {loggedInUser.firstName + \" \" + loggedInUser.lastName}\n            </Typography>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"rtl\" ? (\n                <AccountCircleRounded />\n              ) : (\n                <AccountCircleRounded />\n              )}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            {[\"Mails\", \"Starred\", \"Coming Soon\", \"Coming Soon\"].map(\n              (text, index) => (\n                <ListItem\n                  selected={text === \"Mails\" ? true : false}\n                  button\n                  key={text}\n                >\n                  <ListItemIcon>\n                    {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                  </ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              )\n            )}\n          </List>\n          <Divider />\n          <List>\n            {[\"Coming Soon\", \"Coming Soon\"].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Paper>\n              <div style={{ height: \"12%\", width: \"100%\" }}>\n                <AppBar position=\"relative\" className={clsx(classes.appBar)}>\n                  <Toolbar>\n                    <Grid item xs={10}>\n                      <Button\n                        aria-label=\"open drawer\"\n                        onClick={open ? handleDrawerClose : handleDrawerOpen}\n                        variant=\"contained\"\n                        color=\"primary\"\n                      >\n                        <MenuIcon />\n                      </Button>\n                      <Typography\n                        style={{ marginLeft: \"5px\", display: \"inline-block\" }}\n                        variant=\"h6\"\n                      >\n                        Search Something Here ......\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={2}>\n                      <Button\n                        color=\"default\"\n                        variant=\"contained\"\n                        onClick={() => {\n                          dispatch(removeLoggedInUserId({}));\n                        }}\n                      >\n                        {\" \"}\n                        LOG OUT\n                      </Button>\n                    </Grid>\n                  </Toolbar>\n                </AppBar>\n              </div>\n            </Paper>\n          </Grid>\n\n          <Grid container spacing={3} className={classes.content}>\n            <Grid item xs={3}>\n              <Grid container>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    handleClickOpenComposeMail();\n                  }}\n                  classes={{\n                    root: classes.composeMail,\n                    label: classes.label, // class name, e.g. `classes-nesting-label-x`\n                  }}\n                >\n                  Compose Mail\n                </Button>\n              </Grid>\n              <Grid container spacing={3} className={classes.content}>\n                <Grid item xs={12}>\n                  <Typography variant=\"body1\">FOLDER</Typography>\n                  <List dense={true}>\n                    <ListItem\n                      selected={mailMenu === \"inbox\"}\n                      onClick={() => {\n                        setMailMenu(\"inbox\");\n                      }}\n                    >\n                      <ListItemIcon>\n                        <InboxIcon />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Inbox\" />\n                      <ListItemSecondaryAction>\n                        <Chip\n                          color=\"primary\"\n                          label={\n                            loggedInUser.inbox ? loggedInUser.inbox.length : 0\n                          }\n                          size=\"small\"\n                        />\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                    <Divider />\n                    <ListItem\n                      selected={mailMenu === \"sent\"}\n                      onClick={() => {\n                        setMailMenu(\"sent\");\n                      }}\n                    >\n                      <ListItemIcon>\n                        <SendIcon />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Send Mail\" />\n                      <ListItemSecondaryAction>\n                        <Chip\n                          color=\"primary\"\n                          label={\n                            loggedInUser.sent ? loggedInUser.sent.length : 0\n                          }\n                          size=\"small\"\n                        />\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                    <Divider />\n                    <ListItem>\n                      <ListItemIcon>\n                        <GradeIcon />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Important\" />\n                    </ListItem>\n                    <Divider />\n                    <ListItem>\n                      <ListItemIcon>\n                        <DraftsIcon />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Drafts\" />\n                    </ListItem>\n                    <Divider />\n                    <ListItem>\n                      <ListItemIcon>\n                        <DeleteIcon />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Trash\" />\n                    </ListItem>\n                    <Divider />\n                  </List>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography variant=\"body1\">CATEGORIES</Typography>\n                  <List dense={true}>\n                    <ListItem>\n                      <ListItemIcon>\n                        <FiberManualRecordIcon />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Work\" />\n                      <ListItemSecondaryAction>\n                        <Chip color=\"primary\" label=\"12\" size=\"small\" />\n                      </ListItemSecondaryAction>\n                    </ListItem>\n\n                    <Divider />\n                    <ListItem>\n                      <ListItemIcon>\n                        <FiberManualRecordIcon color=\"error\" />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Interview\" />\n                    </ListItem>\n                    <Divider />\n                    <ListItem>\n                      <ListItemIcon>\n                        <FiberManualRecordIcon color=\"secondary\" />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Tutorials\" />\n                    </ListItem>\n                    <Divider />\n                    <ListItem>\n                      <ListItemIcon>\n                        <FiberManualRecordIcon color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Spam\" />\n                    </ListItem>\n                    <Divider />\n                  </List>\n                </Grid>\n                <Grid item xs={12} spacing={3}>\n                  <Typography variant=\"body1\">LABELS</Typography>\n                  <Button\n                    style={{ margin: \"5px\", backgroundColor: \"white\" }}\n                    variant=\"outlined\"\n                  >\n                    <LabelIcon style={{ marginRight: \"8px\" }}></LabelIcon>\n                    Work\n                  </Button>\n                  <Button\n                    style={{ margin: \"5px\", backgroundColor: \"white\" }}\n                    variant=\"outlined\"\n                  >\n                    <LabelIcon style={{ marginRight: \"8px\" }}></LabelIcon>\n                    Home\n                  </Button>\n                  <Button\n                    style={{ margin: \"5px\", backgroundColor: \"white\" }}\n                    variant=\"outlined\"\n                  >\n                    <LabelIcon style={{ marginRight: \"8px\" }}></LabelIcon>\n                    Family\n                  </Button>\n                  <Button\n                    style={{ margin: \"5px\", backgroundColor: \"white\" }}\n                    variant=\"outlined\"\n                  >\n                    <LabelIcon style={{ marginRight: \"8px\" }}></LabelIcon>\n                    Children\n                  </Button>\n                  <Button\n                    style={{ margin: \"5px\", backgroundColor: \"white\" }}\n                    variant=\"outlined\"\n                  >\n                    <LabelIcon style={{ marginRight: \"8px\" }}></LabelIcon>\n                    Holiday\n                  </Button>\n                  <Button\n                    style={{ margin: \"5px\", backgroundColor: \"white\" }}\n                    variant=\"outlined\"\n                  >\n                    <LabelIcon style={{ marginRight: \"8px\" }}></LabelIcon>\n                    Bank\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={9}>\n              <Paper className={classes.paper}>\n                {\" \"}\n                <Grid container spacing={3}>\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"space-between\"\n                      alignItems=\"center\"\n                      spacing={3}\n                    >\n                      <Grid item xs={2}>\n                        {mailMenu === `inbox` && (\n                          <Typography variant=\"h5\">\n                            inbox (\n                            {loggedInUser.inbox ? loggedInUser.inbox.length : 0}\n                            )\n                          </Typography>\n                        )}\n                        {mailMenu === `sent` && (\n                          <Typography variant=\"h5\">\n                            sent (\n                            {loggedInUser.sent ? loggedInUser.sent.length : 0})\n                          </Typography>\n                        )}\n                      </Grid>\n                      <Grid item xs={4}>\n                        <InputBase\n                          className={classes.input}\n                          placeholder=\"Search..\"\n                          inputProps={{ \"aria-label\": \"search\" }}\n                        />\n                        <IconButton\n                          type=\"submit\"\n                          className={classes.iconButton}\n                          aria-label=\"search\"\n                        >\n                          <SearchIcon />\n                        </IconButton>\n                      </Grid>\n                    </Grid>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"space-between\"\n                      alignItems=\"center\"\n                      spacing={3}\n                    >\n                      <Grid item xs={6}>\n                        <Button variant=\"outlined\" startIcon={<CachedIcon />}>\n                          Refresh\n                        </Button>\n                        <Button\n                          style={{ marginLeft: \"4px\" }}\n                          variant=\"outlined\"\n                          aria-label=\"view\"\n                        >\n                          <VisibilityIcon />\n                        </Button>\n                        <Button\n                          style={{ marginLeft: \"4px\" }}\n                          variant=\"outlined\"\n                          aria-label=\"view\"\n                        >\n                          <PriorityHighIcon />\n                        </Button>\n                        <Button\n                          style={{ marginLeft: \"4px\" }}\n                          variant=\"outlined\"\n                          aria-label=\"view\"\n                        >\n                          <DeleteIcon />\n                        </Button>\n                      </Grid>\n                    </Grid>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"space-between\"\n                      alignItems=\"center\"\n                      style={{ marginTop: \"15px\" }}\n                      spacing={3}\n                    >\n                      <TableContainer>\n                        <Table\n                          aria-labelledby=\"tableTitle\"\n                          aria-label=\"enhanced table\"\n                        >\n                          <TableBody>\n                            {mailMenu === `sent` && loggedInUser.sent\n                              ? loggedInUser.sent?.map((row: Mail) => {\n                                  let isItemSelected = isSelected(row.id);\n                                  return (\n                                    <TableRow\n                                      hover\n                                      role=\"checkbox\"\n                                      aria-checked={isItemSelected}\n                                      tabIndex={-1}\n                                      key={row.id}\n                                      onClick={() => {\n                                        setSelectedMail(row);\n                                        handleClickOpenViewMail();\n                                      }}\n                                      selected={isItemSelected}\n                                    >\n                                      <TableCell\n                                        onClick={(event) =>\n                                          handleClick(event, row.id)\n                                        }\n                                        padding=\"checkbox\"\n                                      >\n                                        <Checkbox\n                                          checked={isItemSelected}\n                                          inputProps={{\n                                            \"aria-labelledby\": row.id,\n                                          }}\n                                        />\n                                      </TableCell>\n                                      <TableCell\n                                        component=\"th\"\n                                        id={row.id}\n                                        scope=\"row\"\n                                        padding=\"none\"\n                                      >\n                                        {row.from}\n                                      </TableCell>\n\n                                      <TableCell align=\"center\">\n                                        {row.message}\n                                      </TableCell>\n                                      <TableCell align=\"right\">\n                                        {row.date}\n                                      </TableCell>\n                                    </TableRow>\n                                  );\n                                })\n                              : mailMenu === `sent` && (\n                                  <TableRow>\n                                    <Alert\n                                      style={{ padding: \"20px\", margin: \"10%\" }}\n                                      severity=\"success\"\n                                      color=\"info\"\n                                    >\n                                      <Typography variant=\"h6\">\n                                        Welcome to SAHAJ email service.. There\n                                        are no Emails for You !!\n                                      </Typography>\n                                    </Alert>\n                                  </TableRow>\n                                )}\n                            {mailMenu === `inbox` && loggedInUser.inbox\n                              ? loggedInUser.inbox?.map((row: Mail) => {\n                                  let isItemSelected = isSelected(row.id);\n                                  return (\n                                    <TableRow\n                                      hover\n                                      role=\"checkbox\"\n                                      aria-checked={isItemSelected}\n                                      tabIndex={-1}\n                                      key={row.id}\n                                      onClick={() => {\n                                        setSelectedMail(row);\n                                        handleClickOpenViewMail();\n                                      }}\n                                      selected={isItemSelected}\n                                    >\n                                      <TableCell\n                                        onClick={(event) =>\n                                          handleClick(event, row.id)\n                                        }\n                                        padding=\"checkbox\"\n                                      >\n                                        <Checkbox\n                                          checked={isItemSelected}\n                                          inputProps={{\n                                            \"aria-labelledby\": row.id,\n                                          }}\n                                        />\n                                      </TableCell>\n                                      <TableCell\n                                        component=\"th\"\n                                        id={row.id}\n                                        scope=\"row\"\n                                        padding=\"none\"\n                                      >\n                                        {row.from}\n                                      </TableCell>\n\n                                      <TableCell align=\"center\">\n                                        {row.message}\n                                      </TableCell>\n                                      <TableCell align=\"right\">\n                                        {row.date}\n                                      </TableCell>\n                                    </TableRow>\n                                  );\n                                })\n                              : mailMenu === `inbox` && (\n                                  <TableRow>\n                                    <Alert\n                                      style={{ padding: \"20px\", margin: \"10%\" }}\n                                      severity=\"success\"\n                                      color=\"info\"\n                                    >\n                                      <Typography variant=\"h6\">\n                                        Welcome to SAHAJ email service.. There\n                                        are no Emails for You !!\n                                      </Typography>\n                                    </Alert>\n                                  </TableRow>\n                                )}{\" \"}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </ThemeProvider>\n  );\n}\n","import {  configureStore } from '@reduxjs/toolkit'\n\nimport {userSlice} from \"./slices/userSlice\"\n\n\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('SEHAJ_ASSIGNMENT_LOCAL_STORE');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\nexport const saveState = (state:any) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('SEHAJ_ASSIGNMENT_LOCAL_STORE', serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\nconst persistedState = loadState();\nexport const store = configureStore({\n  reducer: userSlice.reducer,\n  preloadedState:persistedState\n})\n\nstore.subscribe(() => {\n  saveState(\n    store.getState()\n  );\n});\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport {\n  Switch,\n  Route,\n  BrowserRouter as Router,\n  Redirect,\n} from \"react-router-dom\";\nimport { Login } from \"./screens/login/root\";\nimport SignUp from \"./screens/signup/root\";\nimport DashBoard from \"./screens/dashboard/root\";\nimport { store } from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\nfunction App() {\n  return (\n    <React.StrictMode>\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/login\">\n              <Login></Login>\n            </Route>\n            <Route exact path=\"/sign-up\">\n              <SignUp></SignUp>\n            </Route>\n            <Route exact path=\"/dashboard\">\n              {/* {store.getState().loggedInUserId ? ( */}\n              <DashBoard></DashBoard>\n              {/* ) : ( */}\n              {/* <Redirect to=\"/login\" /> */}\n              {/* )} */}\n            </Route>\n\n            <Route exact key=\"*\" path=\"*\">\n              <Redirect to=\"/login\" />\n            </Route>\n          </Switch>\n        </Router>\n      </Provider>\n    </React.StrictMode>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}